version: '3.7'

volumes:
    alertmanager_etc:
      driver: local
      driver_opts:
        type: 'none'
        o: 'bind'
        device: ./volumes/alertmanager/etc
    prometheus_etc:
      driver: local
      driver_opts:
        type: 'none'
        o: 'bind'
        device: ./volumes/prometheus/etc
    prometheus_data:
      driver: local
      driver_opts:
        type: 'none'
        o: 'bind'
        device: ./volumes/prometheus/data
    grafana_etc:
      driver: local
      driver_opts:
        type: 'none'
        o: 'bind'
        device: ./volumes/grafana/etc
    grafana_data:
      driver: local
      driver_opts:
        type: 'none'
        o: 'bind'
        device: ./volumes/grafana/data

networks:
  monitor-net:

services:

  prometheus:
    image: prom/prometheus
    volumes:
      - ./volumes/prometheus/etc:/etc/prometheus/
      - ./volumes/prometheus/data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
      - '--log.level=debug'
    ports:
      - 9090:9090
#    depends_on:
#      - cadvisor
#      - pushgateway
    networks:
      - monitor-net
    deploy:
      placement:
        constraints:
          - node.role==manager
      restart_policy:
        condition: on-failure
  blackbox_exporter:
    image: prom/blackbox-exporter
    dns: 8.8.8.8
    restart: always
#    ports:
#      - "9115:9115"
    volumes:
      - "./volumes/blackbox:/config"
    command: -config.file=/config/blackbox.yml

  # mikrotik-exporter:
  #   image: nshttpd/mikrotik-exporter:1.0.11
  #   volumes:
  #     - './volumes/mikrotik:/config'
  #   environment:
  #     - "CONFIG_FILE=/config/config.yml"
  #   ports:
  #     - 9436:9436
  #   networks:
  #     - monitor-net
  #   restart: unless-stopped
  
  snmp:
    image: quay.io/prometheus/snmp-exporter
    #    volumes:
    #      - ./volumes/snmp:/etc/snmp_exporter
#    ports:
#      - 9116:9116
#      - 116:116/udp
    networks:
      - monitor-net
    restart: always
    #    command: --config.file=/etc/snmp_exporter/snmp.yml

  node-exporter:
    image: prom/node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command: 
      - '--path.procfs=/host/proc' 
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
#    ports:
#      - 9100:9100
    networks:
      - monitor-net
    deploy:
      mode: global
      restart_policy:
          condition: on-failure

  alertmanager:
    image: prom/alertmanager
    ports:
      - 9093:9093
    volumes:
      - ./volumes/alertmanager/etc:/etc/alertmanager/
    networks:
      - monitor-net
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
    deploy:
      placement:
        constraints:
           - node.role==manager
      restart_policy:
        condition: on-failure    

#  cadvisor:
#    image: gcr.io/cadvisor/cadvisor
#    volumes:
#      - /:/rootfs:ro
#      - /var/run:/var/run:rw
#      - /sys:/sys:ro
#      - /var/lib/docker/:/var/lib/docker:ro
#    ports:
#      - 8080:8080
#    networks:
#      - monitor-net
#    deploy:
#      mode: global
#      restart_policy:
#          condition: on-failure

  grafana:
#    image: grafana-zabbix
    image: grafana/grafana
    depends_on:
      - prometheus
    ports:
      - 80:3000
    volumes:
      - ./volumes/grafana/data:/var/lib/grafana
      - ./volumes/grafana/etc:/etc/grafana/provisioning/
    env:
      - "GF_SECURITY_ADMIN_PASSWORD=P@ssw0rd"
      - "GF_USERS_ALLOW_SIGN_UP=false"
    networks:
      - monitor-net
    user: "472"
    deploy:
      placement:
        constraints:
          - node.role==manager
      restart_policy:
        condition: on-failure

#  pushgateway:
#    image: prom/pushgateway
#    deploy:
#      mode: global
#      restart_policy:
#        condition: on-failure
#    ports:
#      - 9091:9091
#    networks:
#      - monitor-net
